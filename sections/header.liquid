

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}



<{% if section.settings.sticky_header_type != 'none' %}sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}"{% else %}div{% endif %} 
class="header-wrapper {% if section.settings.show_line_separator %}header-wrapper--border-bottom{% endif %}">


  <header class="custom--header flex items-center justify-between px-20 py-[46px] text-black">
  
    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}


    <a href="/">
      <img src="https://cdn.shopify.com/s/files/1/0569/9217/0159/files/Mushpreneur_Logo_--_Black.png?v=1736221902" class="w-[250px]" alt="Mushpreneur Logo">
    </a>


    <div class="flex gap-5">

      {%- if shop.customer_accounts_enabled -%}
        <a
          href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
          class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}"
          rel="nofollow"
        >
          {%- if section.settings.enable_customer_avatar -%}
            <account-icon>
              {%- if customer and customer.has_avatar? -%}
                {{ customer | avatar }}
              {%- else -%}
                <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
              {%- endif -%}
            </account-icon>
          {%- else -%}
            <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
          {%- endif -%}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
          {% if cart == empty %}
            <span class="svg-wrapper">{{'icon-cart-empty.svg' | inline_asset_content }}</span>
          {% else %}
            <span class="svg-wrapper">{{'icon-cart.svg' | inline_asset_content }}</span>
          {% endif %}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>

    </div>


   
  </header>
</{% if section.settings.sticky_header_type != 'none' %}sticky-header{% else %}div{% endif %}>






  {%- if settings.cart_type == "notification" -%}
    {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: section.settings.menu_type_desktop -%}
  {%- endif -%}
  
  {% javascript %}
    class StickyHeader extends HTMLElement {
      constructor() {
        super();
      }
  
      connectedCallback() {
        this.header = document.querySelector('.section-header');
        this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
        this.headerBounds = {};
  
        this.setHeaderHeight();
  
        window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));
  
        if (this.headerIsAlwaysSticky) {
          this.header.classList.add('shopify-section-header-sticky');
        };
  
        this.currentScrollTop = 0;
        this.preventReveal = false;
        this.predictiveSearch = this.querySelector('predictive-search');
  
        this.onScrollHandler = this.onScroll.bind(this);
        this.hideHeaderOnScrollUp = () => this.preventReveal = true;
  
        this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
        window.addEventListener('scroll', this.onScrollHandler, false);
  
        this.createObserver();
      }
  
      setHeaderHeight() {
        document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
      }
  
      disconnectedCallback() {
        this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
        window.removeEventListener('scroll', this.onScrollHandler);
      }
  
      createObserver() {
        let observer = new IntersectionObserver((entries, observer) => {
          this.headerBounds = entries[0].intersectionRect;
          observer.disconnect();
        });
  
        observer.observe(this.header);
      }
  
      onScroll() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
  
        if (this.predictiveSearch && this.predictiveSearch.isOpen) return;
  
        if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
          this.header.classList.add('scrolled-past-header');
          if (this.preventHide) return;
          requestAnimationFrame(this.hide.bind(this));
        } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
          this.header.classList.add('scrolled-past-header');
          if (!this.preventReveal) {
            requestAnimationFrame(this.reveal.bind(this));
          } else {
            window.clearTimeout(this.isScrolling);
  
            this.isScrolling = setTimeout(() => {
              this.preventReveal = false;
            }, 66);
  
            requestAnimationFrame(this.hide.bind(this));
          }
        } else if (scrollTop <= this.headerBounds.top) {
          this.header.classList.remove('scrolled-past-header');
          requestAnimationFrame(this.reset.bind(this));
        }
  
        this.currentScrollTop = scrollTop;
      }
  
      hide() {
        if (this.headerIsAlwaysSticky) return;
        this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
        this.closeMenuDisclosure();
        this.closeSearchModal();
      }
  
      reveal() {
        if (this.headerIsAlwaysSticky) return;
        this.header.classList.add('shopify-section-header-sticky', 'animate');
        this.header.classList.remove('shopify-section-header-hidden');
      }
  
      reset() {
        if (this.headerIsAlwaysSticky) return;
        this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
      }
  
      closeMenuDisclosure() {
        this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
        this.disclosures.forEach(disclosure => disclosure.close());
      }
  
      closeSearchModal() {
        this.searchModal = this.searchModal || this.header.querySelector('details-modal');
        this.searchModal.close(false);
      }
    }
  
    customElements.define('sticky-header', StickyHeader);
  {% endjavascript %}


  <script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}


{% schema %}
  {
    "name": "t:sections.header.name",
    "class": "section-header",
    "max_blocks": 3,
    "settings": [
      {
        "type": "link_list",
        "id": "menu",
        "default": "main-menu",
        "label": "t:sections.header.settings.menu.label"
      },
      {
        "type": "select",
        "id": "menu_type_desktop",
        "options": [
          {
            "value": "dropdown",
            "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
          },
          {
            "value": "mega",
            "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
          },
          {
            "value": "drawer",
            "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
          }
        ],
        "default": "dropdown",
        "label": "t:sections.header.settings.menu_type_desktop.label",
        "info": "t:sections.header.settings.menu_type_desktop.info"
      },
      {
        "type": "select",
        "id": "sticky_header_type",
        "options": [
          {
            "value": "none",
            "label": "t:sections.header.settings.sticky_header_type.options__1.label"
          },
          {
            "value": "on-scroll-up",
            "label": "t:sections.header.settings.sticky_header_type.options__2.label"
          },
          {
            "value": "always",
            "label": "t:sections.header.settings.sticky_header_type.options__3.label"
          },
          {
            "value": "reduce-logo-size",
            "label": "t:sections.header.settings.sticky_header_type.options__4.label"
          }
        ],
        "default": "on-scroll-up",
        "label": "t:sections.header.settings.sticky_header_type.label"
      },
      {
        "type": "checkbox",
        "id": "show_line_separator",
        "default": true,
        "label": "t:sections.header.settings.show_line_separator.label"
      }
      
    ],
    "blocks": [
      {
        "type": "@app"
      }
    ]
  }
  {% endschema %}
  